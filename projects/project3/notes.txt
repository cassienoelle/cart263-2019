1. setup p5 canvas test pixel processing
2. test face recognition
3. determine course
4. use face recognition, more than one face harmonizes
5. combine p5 and face recognition? only analyze pixels in face?
6. using posenet, the beat is created using the key points on the face, then the harmony or wtvr using body poses
7. sound files and frequencies but if time add option to record mic input
8. make it so you can record the piece of music
9. drag and drop sounds onto face parts to select beat



TO DO:
- fix/equalize length of drum beat sound files
- make appropriate dot flash with each beat
- make all code for multiple poses or for single
- decide whether to keep emoji face (maybe ending when song recorded?)
- if emoji face kept, make it rotate with face angle


POSES:

0 - nose
1 - leftEye
2 - rightEye
3 - leftEar
4 - rightEar
5 - leftShoulder
6 - rightShoulder
7 - leftElbow
8 - rightElbow
9 - leftWrist
10 - rightWrist
11 - leftHip
12 - rightHip
13 - leftKnee
14 - rightKnee
15 - leftAnkle
16 - rightAnkle


C2

65.41, 73.42, 82.41, 98.00, 110.00, 123.47, 130.81



synthLeft = new Pizzicato.Sound({
  source: 'wave',
  options: {
    type: 'sine',
    attack: 0.2,
    release: 0.2,
    frequency: frequencyLeft
  }
});

synthRight = new Pizzicato.Sound({
  source: 'wave',
  options: {
    type: 'sine',
    attack: 0.2,
    release: 0.2,
    frequency: frequencyRight
  }
});

frequencyLeft = map(leftWrist.position.y, height, 0, minFreqLeft, maxFreqLeft);
frequencyRight = map(rightWrist.position.y, height, 0, minFreqRight, maxFreqRight);
synthLeft.frequency = frequencyLeft;
synthRight.frequency = frequencyRight;


let leftX, leftY, rightX, rightY, noseX, noseY, size;


// Overlay images
let wowEmoji;


// preload()
//
// Preload images
function preload() {
  wowEmoji = loadImage('assets/images/wow-emoji.png');

}
